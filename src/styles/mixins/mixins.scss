//## Media
@mixin breakpoint($minValue: false, $maxValue: false) {
  @if $minValue {
    $minValue: map-get($grid-breakpoints, $minValue);
  }

  @if $maxValue {
    $maxValue: map-get($grid-breakpoints, $maxValue) - 0.02;
  }

  @if $minValue and $maxValue {
    @media (min-width: $minValue) and (max-width: $maxValue) {
      @content;
    }
  } @else if $minValue {
    @media (min-width: $minValue) {
      @content;
    }
  } @else if $maxValue {
    @media (max-width: $maxValue) {
      @content;
    }
  } @else {
    @content;
  }
}

//## Scroll
@mixin scroll {
  overflow-x: auto;
  overflow-y: hidden;
  display: flex;
  width: calc(100% + 40px);
  margin: 0 -20px;

  &::-webkit-scrollbar {
    display: none;
  }

  &:after,
  &:before {
    content: '';
    display: block;
    flex-shrink: 0;
    width: 20px;
  }
}

@mixin scroll-shadow {
  position: relative;

  &:after,
  &:before {
    content: '';
    z-index: 2;
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    height: 100%;
    width: 20px;
    background-image: linear-gradient(to left, rgba($white, 0), rgba($white, 1));
  }

  &:before {
    left: -20px;
  }

  &:after {
    right: -20px;
    transform: rotate(180deg);
  }
}

//## Prose
@mixin prose-ignore($selectors) {
  #{$selectors}:not(:where([class~='c-prose--ignore'] *)) {
    @content;
  }
}

//## Utilites
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
@mixin line-clamp($count: 3) {
  display: -webkit-box;
  -webkit-line-clamp: $count;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin cover {
  display: block;
  position: relative;
  overflow: hidden;

  &:before {
    content: '';
    display: block;
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
